# SPDX-License-Identifier: GPL-2.0
%YAML 1.2
---
$id: http://devicetree.org/schemas/pci/designware,pcie.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: Synopsys DesignWare PCIe interface

maintainers:
  - Jingoo Han <jingoohan1@gmail.com>
  - Gustavo Pimentel <gustavo.pimentel@synopsys.com>

description: |
  Synopsys DesignWare PCIe host controller

properties:
  compatible:
    description: |
      The compatible can be either:
      - snps,dw-pcie       # for RC mode
      - snps,dw-pcie-ep    # For EP mode
      or some other value, when there's a host-specific driver

  reg:
    description: |
      For designware cores version < 4.80 contains the configuration
      address space. For designware core version >= 4.80, contains
      the configuration and ATU address space
    maxItems: 4

  reg-names:
    description: |
      Must be "config" for the PCIe configuration space and "atu" for
      the ATU address space.
      (The old way of getting the configuration address space from
      "ranges" is deprecated and should be avoided.)
    maxItems: 4

  num-lanes:
    description: |
      number of lanes to use (this property should be specified unless
      the link is brought already up in BIOS)
    maxItems: 1

  reset-gpio:
    description: GPIO pin number of power good signal
    maxItems: 1

  clocks:
    description: |
      Must contain an entry for each entry in clock-names.
      See Documentation/devicetree/bindings/clock/clock-bindings.txt for
      details.
    minItems: 2
    maxItems: 8

  clock-names:
    description: |
      Must include the following entries:
      - "pcie"
      - "pcie_bus"
    minItems: 2
    maxItems: 8

  "snps,enable-cdm-check":
    $ref: /schemas/types.yaml#definitions/flag
    description: |
      This is a boolean property and if present enables
      automatic checking of CDM (Configuration Dependent Module) registers
      for data corruption. CDM registers include standard PCIe configuration
      space registers, Port Logic registers, DMA and iATU (internal Address
      Translation Unit) registers.

  # The following are mandatory properties for RC Mode

  "#address-cells":
    const: 3

  "#size-cells":
    const: 2

  device_type:
    const: pci

  ranges:
    $ref: /schemas/types.yaml#/definitions/uint32-array
    description: |
      ranges for the PCI memory and I/O regions
    minItems: 1
    maxItems: 8

  "#interrupt-cells":
    $ref: /schemas/types.yaml#/definitions/uint32
    const: 1

  interrupt-map-mask:
    description: |
      Standard PCI properties to define the mapping of the PCIe
      interface to interrupt numbers.

  interrupt-map:
    description: |
      Standard PCI properties to define the mapping of the PCIe
      interface to interrupt numbers.

  # The following are optional properties for RC mode

  num-viewport:
    description: |
      number of view ports configured in hardware. If a platform
      does not specify it, the driver assumes 2.

  bus-range:
    description: |
      PCI bus numbers covered (it is recommended for new devicetrees
      to specify this property, to keep backwards compatibility a range of
      0x00-0xff is assumed if not present)

  # The following are mandatory properties for EP Mode

  num-ib-windows:
    description: number of inbound address translation windows
    maxItems: 1

  num-ob-windows:
    description: number of outbound address translation windows
    maxItems: 1

  # The following are optional properties for EP mode

  max-functions:
    description: maximum number of functions that can be configured
    maxItems: 1

required:
  - reg
  - reg-names
  - compatible

allOf:
  - if:
      properties:
        compatible:
          contains:
            const: snps,dw-pcie
    then:
      allOf:
        - $ref: /schemas/pci/pci-bus.yaml#
        - required:
            - compatible
            - "#address-cells"
            - "#size-cells"
            - device_type
            - ranges
            - "#interrupt-cells"
            - interrupt-map-mask
            - interrupt-map
  - if:
      properties:
        compatible:
          contains:
            const: snps,dw-pcie-ep
    then:
      required:
        - compatible
        - num-ib-windows
        - num-ob-windows

additionalProperties: false

examples:
  - |
    pcie: pcie@dfc00000 {
      compatible = "snps,dw-pcie";
      reg = <0xdfc00000 0x0001000>, /* IP registers */
            <0xd0000000 0x0002000>; /* Configuration space */
      reg-names = "dbi", "config";
      #address-cells = <3>;
      #size-cells = <2>;
      device_type = "pci";
      ranges = <0x81000000 0 0x00000000 0xde000000 0 0x00010000>,
               <0x82000000 0 0xd0400000 0xd0400000 0 0x0d000000>;
      interrupts = <25>, <24>;
      #interrupt-cells = <1>;
      num-lanes = <1>;
    };
    pcie_ep: pcie_ep@dfd00000 {
      compatible = "snps,dw-pcie-ep";
      reg = <0xdfc00000 0x0001000>, /* IP registers 1 */
            <0xdfc01000 0x0001000>, /* IP registers 2 */
            <0xd0000000 0x2000000>; /* Configuration space */
      reg-names = "dbi", "dbi2", "addr_space";
      num-ib-windows = <6>;
      num-ob-windows = <2>;
      num-lanes = <1>;
    };
